<?xml version="1.0" encoding="UTF-8"?>
<atwd1 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.cems.uwe.ac.uk/~p-chatterjee/2019-20/modules/atwd1/assignment/atwd1_schema.xsd"
    code="UFCFX3-15-3" name="Advanced Topics in Web Development 1" year="2019/20">
    <student sno="17024154" un="d2-koleczko" surname="Koleczko" prog="BSc (Hons) Computing"/>
    <assignment>
        <component id="A" name="Currency Service">
            <tests>
                <!-- 
                 Note that you should only need to edit the '~a-student' value 
                 to your own username to make these tests work for your application.
                -->

                <!-- convert 100.00 GBP to INR and return XML -->
                <test id="1" response="xml" type="success"
                    purpose="convert 100.00 GBP to INR and return XML">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/?from=GBP&amp;to=INR&amp;amnt=100.00&amp;format=xml </test>

                <!-- convert 85.75 from USD to EUR and return JSON -->
                <test id="2" response="json" type="success"
                    purpose="convert 85.75 from USD to EUR and return JSON">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/?from=USD&amp;to=EUR&amp;amnt=85.75&amp;format=json </test>

                <!-- redo test 1 but leave out 'format' parameter - should return XML by default -->
                <test id="3" response="xml" type="success"
                    purpose="redo test 1 but leave out format parameter - XML is default">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/?from=GBP&amp;to=INR&amp;amnt=100.00 </test>

                <!-- error 1000: Required parameter is missing - the 'from' parameter is missing -->
                <test id="4" response="xml" type="error 1000"
                    purpose="Required parameter is missing - (from)">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/?to=EUR&amp;amnt=100.00&amp;format=xml</test>

                <!-- error 1100: Parameter not recognized - the 'to' parameter is missing the 'o' (return json) -->
                <test id="5" response="json" type="error 1000 or 1100"
                    purpose="Parameter not recognized - the to parameter is misspelled (return json)"
                    >
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/?from=USD&amp;t=EUR&amp;amnt=100.00&amp;format=json</test>

                <!-- error 1200: Currency type not recognised - the 'from' value is 'YYY') -->
                <test id="6" response="json" type="error 1200"
                    purpose="Currency type not recognised - the from value is YYY">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/?from=YYY&amp;to=EUR&amp;amnt=18.85&amp;format=xml</test>

                <!-- error 1300: Currency amount must be a decimal number - the 'amnt' value is non-decimal) -->
                <test id="7" response="xml" type="error 1300"
                    purpose="Currency amount must be a decimal number - the amnt value is non-decimal"
                    >
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/?from=USD&amp;to=EUR&amp;amnt=NaN&amp;format=xml</test>

                <!-- error 1400: Format must be xml or json - the 'format' value is 'ZZZ') -->
                <test id="8" response="xml" type="error 1400"
                    purpose="Format must be xml or json - the format value is ZZZ">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/?from=USD&amp;to=EUR&amp;amnt=19.20&amp;format=ZZZ</test>
            </tests>
            <data>
                <rates_file>http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/data/rates.xml</rates_file>
            </data>
            <code>
                <file type="main"
                    >http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/docs/index.phps</file>
                <!-- You can add uo to 5 addtional url's here -->
                <file type="config"
                    >http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/docs/config.phps</file>
                <file type="functions"
                    >http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/docs/functions.phps</file>
                <file type="error"
                    >http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/data/error.xml</file>
                <file type="country"
                    >http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/data/country.xml</file>
            </code>
            <comment>Very good undrestanding of component A I think it is well designed</comment>
        </component>

        <component id="B" name="Post, Put &amp; Delete implementation">
            <tests>
                <!-- error 2000: Action not post, put or delete - value is 'other') -->
                <test id="9" response="xml" type="error 2000"
                    purpose="Action not post, put or delete - value is other)">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/update/?cur=USD&amp;action=other</test>

                <!-- error 2100: Currency code is missing (no value) -->
                <test id="10" response="xml" type="error 2100"
                    purpose="Currency code is missing (no value)">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/update/?cur=&amp;action=post</test>

                <!-- error 2200: Currency code not found for update (value is ZZZ) -->
                <test id="11" response="xml" type="error 2200"
                    purpose="Currency code not found for update (value is ZZZ)">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/update/?cur=ZZZ&amp;action=put</test>

                <!-- error 2300: No rate listed for this currency -->
                <test id="12" response="xml" type="error 2300"
                    purpose="No rate listed for this currency - XPT (platinum) has no rate in fixer"
                    >
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/update/?cur=XPT&amp;action=put</test>

                <!-- error 2400: Cannot update base currency (value is GBP) -->
                <test id="14" response="xml" type="error 2400"
                    purpose="Cannot update base currency (value is GBP)">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/update/?cur=GBP&amp;action=del</test>

                <!-- Update USD -->
                <test id="15" response="xml" type="success" purpose="Update USD">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/update/?cur=USD&amp;action=post</test>

                <!-- DELETE USD -->
                <test id="16" response="xml" type="success" purpose="DELETE USD">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/update/?cur=USD&amp;action=del</test>

                <!-- test delete raise - error 1200: Currency type not recognised -->
                <test id="17" response="xml" type="error 1200"
                    purpose="test delete - error 1200: Currency type not recognised">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/?from=USD&amp;to=EUR&amp;amnt=18.85&amp;format=json</test>

                <!-- PUT USD -->
                <test id="18" response="xml" type="success" purpose="PUT USD">
                    http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/update/?cur=USD&amp;action=put</test>
            </tests>
            <code>
                <file type="POST, PUT, DELETE"
                    >http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/docs/update/index.phps</file>
                <!-- You can add more file elements here -->
            </code>
            <comment>Very good understanding of component B I think it is well designed</comment>
        </component>

        <component id="C" name="Form Interface">
            <form>http://isa.cems.uwe.ac.uk/~d2-koleczko/atwd1/assignment/update/form/</form>
            <comment>A nice user interface form with the abillity to dynamically call back data</comment>
        </component>

        <component id="D" name="Critical Evaluation">
            <eval>
                <![CDATA[
                     <h1>What were your learning outcomes in respect to this project? </h1>
                     This assignment has changed the way I think about my work by introducing the
                     REST model where the resources are defined by URIs. This model is not tied to any 
                     programming language giving me the freedom of choice and is the currently the most
                     widely in industry. This has encouraged me to think in a completely new way and 
                     I have started by designing URLS as they are core to the system. I have also 
                     discovered how easy it is to call the services through a URL and send or receive
                     this data through JSON or XML.  During the period of this assignment I had the chance
                     to work and practice a lot with the DOM and its nodes. This experience has given me 
                     even more confidence on how to call and define sections within the document and has
                     made a better programmer overall. With XPATH I was able to successfully traverse 
                     through the tree of nodes to find exactly the information that was required. While
                     creating task B of the assignment I have been able to develop my understanding and
                     knowledge of Ajax. All these learning outcomes will be used in my final year project
                     and going beyond that in my career.  </p>
                     <br/>
                     <h1>How might the application you have built be extended and improved? </h1>
                     <p>I think to improve this application I would need to make a nice user interface
                     that will display all the information nicely to make sure that users use my service 
                     rather than other services. Another good improvement could be done by showing a trend 
                     line of the two currencies to be able to see how the currencies have been growing and 
                     decreasing monthly or weekly as all this information can be obtained from the backed-up 
                     rates data. The data which is used for the trend can be analysed further by showing at
                     which point the currency was the highest, lowest and what is the average. To make the
                     program reach its full potential it could be combined with other APIS to join up with 
                     this API to make a unique web service which converts the currency and transfers money 
                     across to a foreign country. </p>
                     <br/>
                     <h1>How could the application and/or its components promote re-use? </h1>
                     <p>The application has been designed and built in such a way that if the project was being
                     extended by adding new functionality parts of the old system could still be re used to 
                     make new components of the system. The application itself does not stop the user from adding
                     and deleting the currencies as it re-uses its components already written to add to the current
                     list. All the functionality is created in functions which helps in keeping the code tidy and 
                     reusable for different parts of the program. This makes the whole system easily extendable or
                     adaptable if needed for new applications.  It is important to note that on the delete the
                     currency is not deleted as it is just hidden from the user meaning this currency can be re used
                     later one without imputing it again. The application has also been built in such a way that it
                     has a backup of data is always there in case we need to go back to it. </p>
                ]]>
            </eval>
        </component>
    </assignment>

</atwd1>
<!-- ATWD1 assignment XML submission File, 2019 -->
<!-- author: prakash.chatterjee@uwe.ac.uk -->
